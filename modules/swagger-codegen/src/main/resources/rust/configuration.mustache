{{>partial_header}}
use hyper::client::Connect;
use hyper::{Client, Uri};
use hyper::error::UriError;

pub struct Configuration<C: Connect> {
  pub base_path: String,
  pub user_agent: Option<String>,
  pub client: Client<C>,
  pub uri_composer: Box<Fn(&str, &str) -> Result<Uri, UriError>>,
}

impl<C: Connect> Configuration<C> {
  pub fn new(client: Client<C>) -> Configuration<C> {
    Configuration {
      base_path: "{{{basePath}}}".to_owned(),
      user_agent: {{#httpUserAgent}}Some("{{{.}}}".to_owned()){{/httpUserAgent}}{{^httpUserAgent}}Some("Swagger-Codegen/{{version}}/rust".to_owned()){{/httpUserAgent}},
      client: client,
      uri_composer: Box::new(
        |base_path, path| format!("{}{}", base_path, path).parse()
      )
    }
  }
}
